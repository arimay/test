require 'spec_helper'

module TimeCursor
  class Matcher
    def elements
      [ @years, @months, @days, @wdays, @hours, @mins, @secs, @usecs ]
    end
  end
end

describe "TimeCursor.new" do
  [
    [{at: "2015-02-26 01:23:45.678"},           [[2015],[02],[26],[],[ 1],[23],[45],[]] ],
    [{cron: "* * * * *"},                       [[],[],[],[],[],[],[0],[]] ],
    [{sec: '10-59/20'},                         [[],[],[],[],[],[],[10,30,50],[]] ],

    [{at: '2015-02-26 01:00'},                  [[2015],[2],[26],[],[1],[0],[0],[]] ],
    [{year: 2015, month: 2, day: 26, hour: 1},  [[2015],[2],[26],[],[1],[0],[0],[]] ],
    [{cron: '0  9,17  *  *  mon-fri'},          [[],[],[],[1,2,3,4,5],[9,17],[0],[0],[]] ],
    [{wday: 'mon-fri', hour: [9,17]},           [[],[],[],[1,2,3,4,5],[9,17],[0],[0],[]] ],
    [{cron: '0  12  1-7  *  sun'},              [[],[],[1,2,3,4,5,6,7],[0],[12],[0],[0],[]] ],
    [{day: 1..7, wday: 'sun', hour: '12'},      [[],[],[1,2,3,4,5,6,7],[0],[12],[0],[0],[]] ],
    [{sec: '*/10'},                             [[],[],[],[],[],[],[0,10,20,30,40,50],[]] ],
    [{msec: '*/200'},                           [[],[],[],[],[],[],[],[0,200000,400000,600000,800000]] ],
  ].each do |opts, expected|
    it "" do
      expect( TimeCursor.new( **opts ).elements ).to  eq( expected )
    end
  end
end

describe "TimeCursor.at" do
  [
    ["2015-02-26 01:23:45",                     [[2015],[02],[26],[],[ 1],[23],[45],[]] ],
    [Time.parse("2015-02-26 01:23:45"),         [[2015],[02],[26],[],[ 1],[23],[45],[]] ],
    [Date.parse("2015-02-26 01:23:45"),         [[2015],[02],[26],[],[ 0],[ 0],[ 0],[]] ],
    ["2015-02-26",                              [[2015],[02],[26],[],[ 0],[ 0],[ 0],[]] ],
    ["01:23:45",                                [[    ],[  ],[  ],[],[ 1],[23],[45],[]] ],
    ["01:23",                                   [[    ],[  ],[  ],[],[ 1],[23],[ 0],[]] ],
  ].each do |time, expected|
    it "" do
      expect( TimeCursor.at( time ).elements ).to  eq( expected )
    end
  end
end

describe "TimeCursor.cron" do
  [
    ["* * * * *",                               [[],[],[],[],[],[],[0],[]] ],
    ["0 * * * *",                               [[],[],[],[],[],[0],[0],[]] ],
    ["0 1 * * *",                               [[],[],[],[],[1],[0],[0],[]] ],
    ["0 1 2 * *",                               [[],[],[2],[],[1],[0],[0],[]] ],
    ["0 1 2 3 *",                               [[],[3],[2],[],[1],[0],[0],[]] ],
    ["0 1 * * 4",                               [[],[],[],[4],[1],[0],[0],[]] ],
    ["*/10 * * * *",                            [[],[],[],[],[],[0,10,20,30,40,50],[0],[]] ],
    ["0 2-23/4 * * *",                          [[],[],[],[],[2,6,10,14,18,22],[0],[0],[]] ],
    ["0 1 * * mon-fri",                         [[],[],[],[1,2,3,4,5],[1],[0],[0],[]] ],
    ["0 1 1-7 * thr",                           [[],[],[1,2,3,4,5,6,7],[4],[1],[0],[0],[]] ],
    ["0 1 1-7 mar thr",                         [[],[3],[1,2,3,4,5,6,7],[4],[1],[0],[0],[]] ],
  ].each do |str, expected|
    it "" do
      expect( TimeCursor.cron( str ).elements ).to  eq( expected )
    end
  end
end

describe "TimeCursor.detail" do
  [
    [{},                                        [[],[],[],[],[],[],[0],[]] ],
    [{sec: 0},                                  [[],[],[],[],[],[],[0],[]] ],
    [{min: 0},                                  [[],[],[],[],[],[0],[0],[]] ],
    [{hour: 1},                                 [[],[],[],[],[1],[0],[0],[]] ],
    [{wday: 'thr'},                             [[],[],[],[4],[0],[0],[0],[]] ],
    [{day: 2},                                  [[],[],[2],[],[0],[0],[0],[]] ],
    [{month: 3},                                [[],[3],[1],[],[0],[0],[0],[]] ],
    [{year: 2016},                              [[2016],[1],[1],[],[0],[0],[0],[]] ],

    [{sec: '0-59/20'},                          [[],[],[],[],[],[],[0,20,40],[]] ],
    [{sec: '*'},                                [[],[],[],[],[],[],(0..59).to_a,[]] ],
    [{msec: '*/200'},                           [[],[],[],[],[],[],[],[0,200000,400000,600000,800000]] ],
  ].each do |opts, expected|
    it "" do
      expect( TimeCursor.detail( **opts ).elements ).to  eq( expected )
    end
  end
end

